{"version":3,"sources":["Context.jsx","components/Note.jsx","components/NoteSearch.jsx","components/EditNote.jsx","components/Loading.jsx","components/NoteList.jsx","components/NoteInput.jsx","components/SideBar.jsx","App.jsx","index.js"],"names":["NoteContext","createContext","undefined","NoteState","useContext","Context","children","useState","notesArray","setNotesArray","noteText","setNoteText","noteTitle","setNoteTitle","category","setCategory","searchText","setSearchText","open","setOpen","complete","setComplete","openEdit","setOpenEdit","id","setId","filterCategory","setFilterCategory","filterComplete","setFilterComplete","isLoading","setIsLoading","useEffect","axios","get","then","res","console","log","data","catch","err","finally","createNote","date","Date","newNote","nanoid","title","text","completed","toLocaleDateString","newNotes","saveNote","a","trim","length","post","message","e","filter","note","sortByComplete","Provider","value","deleteNote","_id","delete","error","completeNote","index","newNotesArray","put","completeNoteStyle","editNote","handleTextChange","event","target","handleTitleChange","handleCategorySort","Note","className","style","color","onClick","substring","NoteSearch","handleSearchNote","onChange","type","name","placeholder","Edit","editTitle","setEditTitle","editText","setEditText","editCategory","setEditCategory","find","toString","modalRef","useRef","handleCloseModal","current","contains","window","addEventListener","removeEventListener","ref","onSubmit","updatedNote","map","handleSubmit","htmlFor","autoComplete","rows","cols","Loading","NoteList","EditNote","NoteInput","autoFocus","SideBar","App","toLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb9d184c.chunk.js","sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { nanoid } from \"nanoid\";\r\nimport axios from \"axios\"; \r\n\r\nexport const NoteContext = createContext(undefined);\r\nexport const NoteDispatchContext = createContext(undefined);\r\n\r\nconst Context = ({ children}) => {\r\n    const [notesArray, setNotesArray] = useState([])\r\n    const [noteText, setNoteText] = useState('');\r\n    const [noteTitle, setNoteTitle] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [searchText, setSearchText] = useState('');\r\n    const [open, setOpen] = useState(false);\r\n    const [complete, setComplete] = useState(false);\r\n    const [openEdit, setOpenEdit] = useState(false);\r\n    const [id, setId] = useState('');\r\n    const [filterCategory, setFilterCategory] = useState('');\r\n    const [filterComplete, setFilterComplete] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const characterLimit = 200;\r\n    \r\n\r\n    useEffect(() => {\r\n      setIsLoading(true);\r\n        axios \r\n        // .get(\"http://localhost:8000/api/note\")\r\n            .get(\"/api/note\")\r\n            .then((res) => {\r\n              console.log(res.data);\r\n              setNotesArray(res.data);\r\n              setIsLoading(false);\r\n            })\r\n            .catch((err) => console.log(err))\r\n            .finally(() => setIsLoading(false));\r\n      }, [])\r\n      \r\n    const createNote = () => {\r\n        const date = new Date();\r\n        const newNote = {\r\n          id: nanoid(),\r\n          title: noteTitle,\r\n          text: noteText,\r\n          category: category,\r\n          completed: complete ? true : false,\r\n          date: date.toLocaleDateString()\r\n        }\r\n        const newNotes = [...notesArray, newNote]\r\n        setNotesArray(newNotes);\r\n      }\r\n            \r\n    const saveNote = async () => {\r\n      const date = new Date();\r\n      \r\n      const newNote = {\r\n        id: nanoid(),\r\n        title: noteTitle,\r\n        text: noteText,\r\n        category: category,\r\n        completed: complete ? true : false,\r\n        date: date.toLocaleDateString()\r\n      }\r\n      \r\n        if(noteText.trim().length > 0) {\r\n            axios \r\n              .post(\"http://localhost:8000/api/note\" , newNote)  \r\n              // .post(\"/api/note\" , newNote)  \r\n              .then((res) => {\r\n                console.log('note posted...');\r\n                  createNote(noteText);\r\n                  setNotesArray([ ...notesArray, ...newNote])\r\n                  setNoteText('');\r\n                  setNoteTitle('');\r\n                  setComplete(false);\r\n              })\r\n              .catch((err) => {\r\n                console.log(err.message)\r\n                console.log(\"ERROR could not create note.\");\r\n              })\r\n        }\r\n      }\r\n\r\n      \r\n    const deleteNote = ( _id ) => {\r\n        // axios.delete( `http://localhost:8000/api/note/${_id}`)\r\n        axios.delete( `/api/note/${_id}`)\r\n        .catch((error) => console.log(error))\r\n        setNotesArray((notesArray) => {\r\n          return notesArray.filter((note) => note._id !== _id)\r\n        })\r\n\r\n      }\r\n\r\n\r\n      const completeNote = (index) => {\r\n        const newNotesArray = [...notesArray];\r\n        newNotesArray[index].complete = !newNotesArray[index].complete;\r\n        setNotesArray(newNotesArray);\r\n        axios \r\n            // .put(`http://localhost:8000/api/note/${newNotesArray[index]._id}`, newNotesArray[index])\r\n            .put(`/api/note/${newNotesArray[index]._id}`, newNotesArray[index])\r\n            .catch((err) => console.log(err))\r\n      }\r\n\r\n      const completeNoteStyle = (index) => {\r\n        const newNotesArray = [...notesArray];\r\n        if (newNotesArray[index].complete) {\r\n          return 'note note-complete'\r\n        } else {\r\n          return 'note'\r\n        }\r\n      }\r\n    \r\n    const editNote = (_id) => {\r\n      console.log('edit note function');\r\n      setId(_id);\r\n      setOpenEdit(true);\r\n    } \r\n  \r\n    const handleTitleChange = (event) => {\r\n        if(event.target.value.length >= 0) {\r\n          setNoteTitle(event.target.value);\r\n        }\r\n      }\r\n\r\n      const handleTextChange = (event) => {\r\n        if(characterLimit - event.target.value.length >= 0) {\r\n          setNoteText(event.target.value)\r\n        }\r\n      }\r\n    \r\n      const handleCategorySort = (e) => {\r\n          console.log(\"category sort\");\r\n        setFilterCategory(e.target.value);\r\n      }\r\n\r\n      useEffect(() => {\r\n        const sortByComplete = (e) => {\r\n          switch (filterComplete) {\r\n            case \"completed\": \r\n            setNotesArray(notesArray.filter((note) => note.complete));\r\n            return;\r\n            case \"uncompleted\":\r\n              setNotesArray(notesArray.filter((note) => !note.complete));\r\n              return;\r\n              default: \r\n              setNotesArray(notesArray);\r\n              break;\r\n            }\r\n          }\r\n          sortByComplete()\r\n          // try putting a dependency into the dependency array that is not an object\r\n        }, [filterComplete, notesArray])\r\n\r\n  return ( \r\n    <NoteContext.Provider value={{ notesArray, noteText, noteTitle, category, open, complete, openEdit, id, filterCategory, searchText, isLoading, setIsLoading, setNotesArray, setSearchText, setNoteText, setNoteTitle, setCategory, setOpen, setComplete, setOpenEdit, setId, setFilterCategory, saveNote, createNote, deleteNote, completeNote, completeNoteStyle, editNote, handleTextChange, handleTitleChange, handleCategorySort, filterComplete, setFilterComplete\r\n    }}>\r\n        {children}\r\n    </NoteContext.Provider>\r\n  )\r\n};\r\n\r\nexport const NoteState = () => {\r\n    return useContext(NoteContext);\r\n}\r\n\r\nexport default Context;\r\n","import { MdDeleteForever } from 'react-icons/md';\r\nimport { MdEdit } from 'react-icons/md';\r\nimport { RiCheckLine } from 'react-icons/ri';\r\nimport { NoteState } from '../Context';\r\n\r\n\r\nconst Note = (\r\n  { index, note }\r\n  ) => {\r\n  const {\r\n    deleteNote, completeNote, completeNoteStyle, editNote\r\n  } = NoteState();\r\n\r\n\r\n    return (\r\n          <article \r\n              className={completeNoteStyle(index)} \r\n              key={note._id}>  \r\n            <div className=\"note-header\">\r\n              <div className=\"note-header-title\">\r\n                <h5 className={note.category}>{note.category}</h5>\r\n                <h3>{note.title}</h3>\r\n              </div>\r\n                <RiCheckLine style={{color: \"#3cc47c\"}}\r\n                  onClick={() => completeNote(index)}  className=\"pin-icon complete-container\"/>\r\n                  \r\n            </div>\r\n            <p>{note.text}</p>\r\n            <p>{note.text.substring(0, 50)}</p>\r\n            <div className=\"note-footer\">\r\n              <p>{note.date}</p>\r\n              <div className=\"note-footer-icon-container\">\r\n                <MdEdit className=\"edit-btn\" onClick={() => editNote(note._id)} />\r\n                <MdDeleteForever className=\"delete-btn\" onClick={() => deleteNote(note._id)}/>\r\n              </div>\r\n            </div>\r\n          </article>\r\n        )\r\n    }\r\n      \r\n         \r\n\r\n\r\nexport default Note;\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport { HiPlusCircle } from 'react-icons/hi'\r\nimport { NoteState } from '../Context'\r\n\r\n\r\nconst NoteSearch = ({ \r\n        handleSearchNote\r\n    }) => {\r\n\r\n    const {\r\n        open,\r\n        setOpen,\r\n        handleCategorySort,\r\n        setFilterComplete\r\n    } = NoteState();\r\n\r\n    return (\r\n        <div className=\"note-search\">\r\n        <div className=\"note-search-container\">\r\n            <div className=\"note-search-mobile-header\">\r\n                <HiPlusCircle \r\n                    onClick={ !open ? () => setOpen(true) : () => setOpen(false)}\r\n                    open={open}\r\n                    className=\"burger-icon\"\r\n                />\r\n                <h1>noteflix</h1>\r\n            </div>\r\n            <input \r\n                className=\"note-search-input\"\r\n                onChange={(event) => handleSearchNote(event.target.value)} \r\n                type=\"text\" \r\n                name=\"search\" \r\n                id=\"note-search\" \r\n                placeholder=\"Search Notes...\"\r\n                />\r\n\r\n    \r\n             <select onChange={(e) =>setFilterComplete(e.target.value)} className=\"note-search-category note-input-select\" name=\"complete-sort\" id=\"complete-sort\">\r\n                <option value=\"\">Filter Completed Notes</option>\r\n                <option value=\"\">Show All</option>\r\n                <option value=\"completed\">Completed</option>\r\n                <option value=\"uncompleted\">Uncompleted</option>\r\n            </select> \r\n\r\n         \r\n\r\n            <select onChange={handleCategorySort} className=\"note-search-category note-input-select\" name=\"category-sort\" id=\"category-sort\">\r\n                <option value=\"\">Filter by Category</option>\r\n                <option value=\"\">Show All</option>\r\n                <option value=\"Important\">Important !!</option>\r\n                <option value=\"Work\">Work</option>\r\n                <option value=\"School\">School</option>\r\n                <option value=\"Home\">Home</option>\r\n                <option value=\"Personal\">Personal</option>\r\n            </select>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default NoteSearch\r\n","import React, { useRef, useEffect, useState, } from 'react'\r\nimport { FaPlus } from \"react-icons/fa\"\r\nimport axios from 'axios';\r\nimport { NoteState } from '../Context';\r\n\r\n\r\nconst Edit = () => {\r\n    const {\r\n      id, notesArray, setNotesArray, setOpenEdit\r\n    } = NoteState();\r\n\r\n  const [editTitle, setEditTitle] = useState('');\r\n  const [editText, setEditText] = useState('');\r\n  const [editCategory, setEditCategory] = useState('');\r\n  const note = notesArray.find(note => (note._id).toString() === id);\r\n\r\n  const modalRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const handleCloseModal = (event) => {\r\n      if(!modalRef.current?.contains(event.target))\r\n        setOpenEdit(false)   \r\n    }\r\n    window.addEventListener('click', handleCloseModal)\r\n    return () => window.removeEventListener('click', handleCloseModal)\r\n}, [setOpenEdit])\r\n\r\nuseEffect(() => {\r\n  if (note) {\r\n    setEditTitle(note.title);\r\n    setEditText(note.text);\r\n    setEditCategory(note.category)\r\n  }\r\n}, [note, setEditTitle, setEditText])\r\n\r\nconst handleSubmit = (_id) => {\r\n  const updatedNote = { _id, title: editTitle, text: editText, category: editCategory }\r\n  axios \r\n    // .put(`http://localhost:8000/api/note/${_id}` , updatedNote)  \r\n    .put(`/api/note/${id}` , updatedNote)  \r\n    .then((res) => {\r\n      setNotesArray(notesArray.map(note => note._id === _id ? { ...res.data } : note))\r\n      setEditTitle(\"\");\r\n      setEditText(\"\");\r\n        })\r\n        .catch((err) => {\r\n          console.log(err.message)\r\n          console.log(\"ERROR could not create note.\")\r\n        })\r\n      }\r\n      \r\n      \r\n      return (\r\n        <div className=\"edit-window\">\r\n        <div ref={modalRef} className=\"note-input note-edit\" onClick={() => setOpenEdit(true)}   >\r\n            <form \r\n              onSubmit={(e) => handleSubmit(id)} \r\n              className='edit'>\r\n            <button \r\n              className='edit-modal-close-btn' \r\n              onClick={() => setOpenEdit(false)}\r\n            >\r\n              Close\r\n            </button>    \r\n            <label htmlFor=\"note-title\">\r\n              </label>\r\n              <input\r\n               onChange={(e) => setEditTitle(e.target.value)} \r\n               value={editTitle} \r\n               name=\"title\"\r\n               id=\"noteTitle\"\r\n               type=\"text\" \r\n               placeholder=\"Title...\" \r\n               autoComplete=\"off\" \r\n               />\r\n            <textarea \r\n              onChange={(e) => setEditText(e.target.value)}\r\n              value={editText} \r\n              name=\"text\"\r\n              id=\"noteText\"\r\n              rows=\"6\" cols=\"20\" \r\n              placeholder=\"Enter note here...\" \r\n              >\r\n            </textarea>\r\n            <select className=\"note-input-select\" onChange={(e) => setEditCategory(e.target.value)}     name=\"category\" id=\"categorySelect\">\r\n                  <option value=\"\">Category</option>\r\n                  <option value=\"Important\">Important !</option>\r\n                  <option value=\"Work\">Work</option>\r\n                  <option value=\"School\">School</option>\r\n                  <option value=\"Home\">Home</option>\r\n                  <option value=\"Personal\">Personal</option>\r\n                  <option value=\"Misc\">Misc</option>\r\n            </select>\r\n            <button \r\n                type=\"submit\" \r\n                className=\"save-btn\" \r\n                // onClick={() => saveEditedNote(note.id)}\r\n            ><FaPlus className=\"plus\"/>Save Note</button>\r\n        </form>\r\n    </div>\r\n  </div>\r\n    )\r\n}\r\n\r\nexport default Edit;\r\n","import React from 'react'\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <>\r\n      <div className='main-spinner-container'>\r\n         <div className=\"lds-default\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n      </div>\r\n    </>  )\r\n}\r\n\r\nexport default Loading","import { nanoid } from \"nanoid\";\r\nimport Note from \"./Note\";\r\nimport NoteSearch from \"./NoteSearch\";\r\nimport EditNote from './EditNote';\r\nimport Loading from \"./Loading\";\r\nimport { NoteState } from \"../Context\";\r\n\r\n\r\nconst NoteList = ({\r\n        notesArray,\r\n        handleSearchNote,\r\n        filterComplete,\r\n        setFilterComplete,\r\n    }) => {\r\n\r\n    const {\r\n        handleCategorySort,\r\n        open, \r\n        setOpen, \r\n        openEdit,\r\n        isLoading,\r\n        setIsLoading,\r\n    } = NoteState();\r\n\r\n\r\n    return(\r\n        <section className=\"notes-list-container\" onClick={ open ? () => setOpen(false) : null}\r\n        open={open}>\r\n            <NoteSearch\r\n                open={open}\r\n                setOpen={setOpen}\r\n                handleSearchNote={handleSearchNote}\r\n                handleCategorySort={handleCategorySort}\r\n                filterComplete={filterComplete}\r\n                setFilterComplete={setFilterComplete}\r\n            />\r\n\r\n            {\r\n                openEdit ? \r\n                (\r\n                    <EditNote />\r\n                )\r\n                :\r\n                    (\r\n                        <div className=\"notes-list\">\r\n                        {notesArray.map((note, index) => {\r\n                            return  <Note \r\n                            index={index}\r\n                            key={nanoid()}\r\n                            id={nanoid()}\r\n                            note={note}\r\n                            />\r\n                        })}\r\n                        </div>\r\n                    \r\n                    )\r\n                \r\n            }\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default NoteList;\r\n\r\n                    ","import { FaPlus } from \"react-icons/fa\"\r\nimport { NoteState } from \"../Context\";\r\n\r\nconst NoteInput = () => {\r\n    const {\r\n      handleTextChange,\r\n      handleTitleChange,\r\n      noteText,\r\n      noteTitle,\r\n      setCategory,\r\n      saveNote\r\n    } = NoteState();\r\n\r\n  const handleCategoryChange = (e) => {\r\n    setCategory(e.target.value);\r\n  }\r\n\r\n\r\n    return (\r\n        <div className=\"note-input\">\r\n          <h1>noteflix</h1>\r\n              <label htmlFor=\"note-title\">\r\n                </label>\r\n                <input\r\n                  onChange={handleTitleChange} \r\n                  value={noteTitle} \r\n                  type=\"text\" id=\"note-title\" name=\"note-title\" placeholder=\"Title...\" \r\n                  autoComplete=\"off\" \r\n                />\r\n              <textarea \r\n                onChange={handleTextChange}\r\n                value={noteText} \r\n                rows=\"6\" cols=\"20\" \r\n                placeholder=\"Enter note here...\" \r\n                name=\"note\" \r\n                id=\"note-input\"\r\n                autoFocus={true} >\r\n              </textarea>\r\n                <select \r\n                  className=\"note-input-select\" \r\n                  onChange={handleCategoryChange}     \r\n                  name=\"category\" \r\n                  id=\"categorySelect\"\r\n                >\r\n                  <option value=\"\">Category</option>\r\n                  <option value=\"Important\">Important !</option>\r\n                  <option value=\"Work\">Work</option>\r\n                  <option value=\"School\">School</option>\r\n                  <option value=\"Home\">Home</option>\r\n                  <option value=\"Personal\">Personal</option>\r\n                  <option value=\"Misc\">Misc</option>\r\n                </select>\r\n              <button \r\n                className=\"save-btn\" \r\n                onClick={saveNote}\r\n              >\r\n                <FaPlus className=\"plus\"/>\r\n                  Save Note\r\n              </button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n\r\n\r\nexport default NoteInput;","import NoteInput from \"./NoteInput\";\r\nimport { NoteState } from \"../Context\";\r\n\r\nconst SideBar = () => {\r\n        const {\r\n            handleTextChange, \r\n            handleTitleChange, \r\n            noteText, \r\n            noteTitle, \r\n            setCategory, \r\n            saveNote, \r\n            open\r\n        } = NoteState();\r\n\r\n    return (\r\n        <div className={open ? \"sidebar openSidebar\" : \"sidebar\"}>\r\n            <NoteInput \r\n                handleTextChange={handleTextChange}\r\n                handleTitleChange={handleTitleChange}\r\n                noteText={noteText}\r\n                noteTitle={noteTitle}\r\n                setCategory={setCategory}\r\n                saveNote={saveNote}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideBar;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\nimport NoteList from './components/NoteList';\r\nimport SideBar from './components/SideBar';\r\nimport Loading from './components/Loading';\r\nimport { NoteState } from './Context';\r\n\r\nfunction App() {\r\n  const {\r\n    notesArray,\r\n    filterCategory,\r\n    setNotesArray,\r\n    isLoading,\r\n    setIsLoading,\r\n  } = NoteState();\r\n\r\n  const [searchText, setSearchText] = useState('');\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    axios\r\n      // .get('http://localhost:8000/api/note')\r\n      .get('api/note')\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setNotesArray(res.data);\r\n      })\r\n      .catch((err) => console.log(err))\r\n      .finally(() => setIsLoading(false));\r\n  }, [setNotesArray]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <SideBar />\r\n      {\r\n        isLoading ? <Loading /> :\r\n        \r\n        <NoteList\r\n        notesArray={\r\n          filterCategory === '' ? notesArray.filter((note) => note.text.toLowerCase().includes(searchText))\r\n          : notesArray.filter((note) => note.text.toLowerCase().includes(searchText))\r\n          && notesArray.filter((note) => note.category === filterCategory)\r\n        }\r\n        setNotesArray={setNotesArray}\r\n        handleSearchNote={setSearchText}\r\n        />\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Context from './Context';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Context>\r\n      <App />\r\n    </Context>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}