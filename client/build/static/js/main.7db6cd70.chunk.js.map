{"version":3,"sources":["components/Note.jsx","components/NoteSearch.jsx","components/EditNote.jsx","components/NoteList.jsx","components/NoteInput.jsx","components/NoteHistory.jsx","components/SideBar.jsx","App.js","index.js"],"names":["Note","id","index","note","deleteNote","completeNote","completeNoteStyle","editNote","complete","setComplete","openEdit","setOpenEdit","className","category","title","style","color","onClick","text","date","_id","NoteSearch","open","setOpen","handleSearchNote","handleCategorySort","onChange","event","target","value","type","name","placeholder","Edit","notesArray","setNotesArray","noteText","noteTitle","createNote","setNoteText","setNoteTitle","handleEditedNote","useState","editTitle","setEditTitle","editText","setEditText","editCategory","setEditCategory","console","log","find","toString","modalRef","useRef","useEffect","handleCloseModal","current","contains","window","addEventListener","removeEventListener","ref","onSubmit","e","updatedNote","axios","put","then","res","map","data","catch","err","message","handleSubmit","htmlFor","autoComplete","rows","cols","NoteList","handleTitleChange","handleTextChange","s","EditNote","nanoid","NoteInput","saveNote","setCategory","autoFocus","NoteHistory","SideBar","setTitleState","titleState","App","filterCategory","setFilterCategory","searchText","setSearchText","setId","get","Date","newNote","completed","toLocaleDateString","newNotes","a","trim","length","post","delete","error","filter","toLowerCase","includes","notesArrayCopy","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7db6cd70.chunk.js","sourcesContent":["import { MdDeleteForever } from 'react-icons/md';\r\nimport { MdEdit } from 'react-icons/md';\r\nimport { RiCheckLine } from 'react-icons/ri';\r\n\r\n\r\nconst Note = ({ id, index, note, deleteNote, completeNote, completeNoteStyle, complete, setComplete, editNote, openEdit, setOpenEdit }) => {\r\n\r\n\r\n    return (\r\n          <article \r\n              // className={ !complete ? 'note' : 'note note-complete'} \r\n              className={completeNoteStyle(index)} \r\n              key={note._id}>  \r\n            <div className=\"note-header\">\r\n              <div className=\"note-header-title\">\r\n                <h5 className={note.category}>{note.category}</h5>\r\n                <h3>{note.title}</h3>\r\n                {/* <h3>{note.title.substring(0,30)}</h3> */}\r\n              </div>\r\n                <RiCheckLine style={{color: \"#3cc47c\"}}\r\n                  // onClick={!complete ? () => setComplete(true) :() => setComplete(false)}  className=\"pin-icon complete-container\"/>\r\n                  onClick={() => completeNote(index)}  className=\"pin-icon complete-container\"/>\r\n                  \r\n            </div>\r\n            <p>{note.text}</p>\r\n            {/* <p>{note.text.substring(0, 50)}</p> */}\r\n            <div className=\"note-footer\">\r\n              <p>{note.date}</p>\r\n              <div className=\"note-footer-icon-container\">\r\n                <MdEdit className=\"edit-btn\" onClick={() => editNote(note._id)} />\r\n                <MdDeleteForever className=\"delete-btn\" onClick={() => deleteNote(note._id)}/>\r\n              </div>\r\n            </div>\r\n          </article>\r\n        )\r\n    }\r\n      \r\n         \r\n\r\n\r\nexport default Note;\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport { HiPlusCircle } from 'react-icons/hi'\r\n\r\n\r\nconst NoteSearch = ({ open, setOpen, handleSearchNote, handleCategorySort}) => {\r\n    return (\r\n        <div className=\"note-search\">\r\n        <div className=\"note-search-container\">\r\n            <div className=\"note-search-mobile-header\">\r\n                <HiPlusCircle \r\n                    onClick={ !open ? () => setOpen(true) : () => setOpen(false)}\r\n                    open={open}\r\n                    className=\"burger-icon\"\r\n                />\r\n                <h1>noteflix</h1>\r\n            </div>\r\n            <input \r\n                className=\"note-search-input\"\r\n                onChange={(event) => handleSearchNote(event.target.value)} \r\n                type=\"text\" \r\n                name=\"search\" \r\n                id=\"note-search\" \r\n                placeholder=\"Search Notes...\"\r\n                />\r\n        \r\n            <select onChange={handleCategorySort} className=\"note-search-category note-input-select\" name=\"category-sort\" id=\"category-sort\">\r\n                <option value=\"\">Category</option>\r\n                <option value=\"\">All</option>\r\n                <option value=\"Important\">Important !!</option>\r\n                <option value=\"Work\">Work</option>\r\n                <option value=\"School\">School</option>\r\n                <option value=\"Home\">Home</option>\r\n                <option value=\"Personal\">Personal</option>\r\n            </select>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default NoteSearch\r\n","import React, { useRef, useEffect, useState, } from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport { FaPlus } from \"react-icons/fa\"\r\nimport axios from 'axios';\r\n\r\n\r\nconst Edit = ({  id, notesArray, setNotesArray, _id, noteText, noteTitle, createNote, setNoteText, setNoteTitle, setOpenEdit, handleEditedNote}) => {\r\n  const [editTitle, setEditTitle] = useState('');\r\n  const [editText, setEditText] = useState('');\r\n  const [editCategory, setEditCategory] = useState('');\r\n  // const { id } = useParams();\r\n  console.log(notesArray);\r\n  const note = notesArray.find(note => (note._id).toString() === id);\r\n  console.log(note);\r\n\r\n  const modalRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const handleCloseModal = (event) => {\r\n      if(!modalRef.current?.contains(event.target))\r\n        setOpenEdit(false)   \r\n    }\r\n    window.addEventListener('click', handleCloseModal)\r\n    return () => window.removeEventListener('click', handleCloseModal)\r\n}, [setOpenEdit])\r\n\r\nuseEffect(() => {\r\n  if (note) {\r\n    setEditTitle(note.title);\r\n    setEditText(note.text);\r\n    setEditCategory(note.category)\r\n  }\r\n}, [note, setEditTitle, setEditText])\r\n\r\nconst handleSubmit = (e,  _id) => {\r\n  // e.preventDefault();\r\n  console.log(id);\r\n  const updatedNote = { _id, title: editTitle, text: editText, category: editCategory }\r\n  console.log(\"edit form submitted...\");\r\n  axios \r\n    .put(`http://localhost:8000/api/note/${id}` , updatedNote)  \r\n    .then((res) => {\r\n      setNotesArray(notesArray.map(note => note._id === _id ? { ...res.data } : note))\r\n      setEditTitle(\"\");\r\n      setEditText(\"\");\r\n    console.log(\"put request successful\");\r\n        })\r\n        .catch((err) => {\r\n          console.log(err.message)\r\n          console.log(\"ERROR could not create note.\");\r\n        })\r\n}\r\n\r\n\r\n    return (\r\n      <div className=\"edit-window\">\r\n        <div ref={modalRef} className=\"note-input note-edit\" onClick={() => setOpenEdit(true)}   >\r\n            <form \r\n              onSubmit={(e) => handleSubmit(id)} \r\n              className='edit'>\r\n            <label htmlFor=\"note-title\">\r\n              </label>\r\n              <input\r\n               onChange={(e) => setEditTitle(e.target.value)} \r\n               value={editTitle} \r\n               name=\"title\"\r\n               id=\"noteTitle\"\r\n               type=\"text\" \r\n               placeholder=\"Title...\" \r\n               autoComplete=\"off\" \r\n               />\r\n            <textarea \r\n              onChange={(e) => setEditText(e.target.value)}\r\n              value={editText} \r\n              name=\"text\"\r\n              id=\"noteText\"\r\n              rows=\"6\" cols=\"20\" \r\n              placeholder=\"Enter note here...\" \r\n              >\r\n              </textarea>\r\n              <select className=\"note-input-select\" onChange={(e) => setEditCategory(e.target.value)} name=\"category\" id=\"categorySelect\">\r\n                  <option value=\"\">Category</option>\r\n                  <option value=\"Important\">Important !</option>\r\n                  <option value=\"Work\">Work</option>\r\n                  <option value=\"School\">School</option>\r\n                  <option value=\"Home\">Home</option>\r\n                  <option value=\"Personal\">Personal</option>\r\n                  <option value=\"Misc\">Misc</option>\r\n                </select>\r\n            <button \r\n                type=\"submit\" \r\n                className=\"save-btn\" \r\n                // onClick={() => saveEditedNote(note.id)}\r\n            ><FaPlus className=\"plus\"/>Save Note</button>\r\n            <button onClick={() => setOpenEdit(false)}>close</button>    \r\n        </form>\r\n    </div>\r\n  </div>\r\n    )\r\n}\r\n\r\nexport default Edit;\r\n","import { nanoid } from \"nanoid\";\r\nimport Note from \"./Note\";\r\nimport NoteSearch from \"./NoteSearch\";\r\nimport EditNote from './EditNote';\r\n\r\n\r\nconst NoteList = ({ id, handleTitleChange, handleTextChange, noteTitle, noteText, notesArray, setNotesArray, handleSearchNote, handleCategorySort, open, setOpen, deleteNote, complete, setComplete, completeNote, completeNoteStyle, editNote, openEdit, setOpenEdit }) => {\r\n\r\n\r\n    return(\r\n        <section className=\"notes-list-container\" onClick={ open ? () => setOpen(false) : null}\r\n        open={open}>\r\n            <NoteSearch\r\n                open={open}\r\n                setOpen={setOpen}\r\n                handleSearchNote={handleSearchNote}s\r\n                handleCategorySort={handleCategorySort}\r\n            />\r\n{/* \r\n            <div className=\"pinned-notes-container\">\r\n            </div> */}\r\n            {\r\n                openEdit ? \r\n                (\r\n                    <EditNote \r\n                        id={id}\r\n                        editNote={editNote}\r\n                        openEdit={openEdit} \r\n                        setOpenEdit={setOpenEdit}\r\n                        handleTextChange={handleTextChange}\r\n                        handleTitleChange={handleTitleChange}\r\n                        noteTitle={noteTitle}\r\n                        noteText={noteText}  \r\n                        notesArray={notesArray}  \r\n                        setNotesArray={setNotesArray}  \r\n                    >\r\n                    </EditNote>\r\n                )\r\n                : \r\n                (\r\n                    <div className=\"notes-list\">\r\n                {notesArray.map((note, index) => {\r\n                    return  <Note \r\n                    index={index}\r\n                    key={nanoid()}\r\n                    id={nanoid()}\r\n                    note={note}\r\n                    noteTitle={note.noteTitle}\r\n                    title={note.title}\r\n                    category={note.category}\r\n                    text={note.text}\r\n                    deleteNote={deleteNote}\r\n                    complete={complete}\r\n                    setComplete={setComplete}\r\n                    completeNote={completeNote}\r\n                    completeNoteStyle={completeNoteStyle}\r\n                    setNotesArray={setNotesArray}\r\n                    editNote={editNote}\r\n                    setOpenEdit={setOpenEdit}\r\n                    />\r\n                })}\r\n            </div>\r\n                )\r\n            }\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default NoteList;\r\n\r\n                    ","import { FaPlus } from \"react-icons/fa\"\r\n\r\nconst NoteInput = ({ handleTitleChange, handleTextChange, noteTitle, noteText, saveNote, setCategory }) => {\r\n\r\n  const handleCategoryChange = (e) => {\r\n    setCategory(e.target.value);\r\n  }\r\n\r\n\r\n    return (\r\n        <div className=\"note-input\">\r\n          <h1>noteflix</h1>\r\n              <label htmlFor=\"note-title\">\r\n                </label>\r\n                <input\r\n                 onChange={handleTitleChange} \r\n                 value={noteTitle} \r\n                 type=\"text\" id=\"note-title\" name=\"note-title\" placeholder=\"Title...\" \r\n                 autoComplete=\"off\" \r\n                />\r\n              <textarea \r\n                onChange={handleTextChange}\r\n                value={noteText} \r\n                rows=\"6\" cols=\"20\" \r\n                placeholder=\"Enter note here...\" \r\n                name=\"note\" \r\n                id=\"note-input\"\r\n                autoFocus={true} >\r\n                </textarea>\r\n                <select className=\"note-input-select\" onChange={handleCategoryChange} name=\"category\" id=\"categorySelect\">\r\n                  <option value=\"\">Category</option>\r\n                  <option value=\"Important\">Important !</option>\r\n                  <option value=\"Work\">Work</option>\r\n                  <option value=\"School\">School</option>\r\n                  <option value=\"Home\">Home</option>\r\n                  <option value=\"Personal\">Personal</option>\r\n                  <option value=\"Misc\">Misc</option>\r\n                </select>\r\n              <button className=\"save-btn\" onClick={saveNote}><FaPlus className=\"plus\"/>Save Note</button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n\r\n\r\nexport default NoteInput;","import { nanoid } from \"nanoid\";\r\nimport { MdDeleteForever } from 'react-icons/md'\r\n\r\n\r\n\r\nconst NoteHistory = ({ notesArray, deleteNote}) => {\r\n\r\n    return (\r\n        <div className=\"note-history\">\r\n            <ul className=\"note-history-list\">\r\n                {notesArray.map((note) => {\r\n                    return <li className=\"note-history-item\"\r\n                                key={nanoid()}\r\n                                id={note.id}\r\n                                title={note.title}\r\n                                text={note.text}>\r\n                                    <div className=\"note-history-header\">\r\n                                        <h3>{note.title}</h3>\r\n                                        <h5>{note.category}</h5>\r\n                                    </div>\r\n                                    <p>{note.text}</p>\r\n                                    <div className=\"note-footer\">\r\n                                        <p>{note.date}</p>\r\n                                        <MdDeleteForever className=\"delete-btn\" onClick={() => deleteNote(note.id)}/>\r\n                                    </div>\r\n                            </li>\r\n                })}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NoteHistory;","import NoteInput from \"./NoteInput\";\r\nimport NoteHistory from \"./NoteHistory\";\r\n\r\nconst SideBar = ({ \r\n    handleTextChange, \r\n    handleTitleChange,\r\n    noteText, \r\n    noteTitle,\r\n    setTitleState,\r\n    titleState,\r\n    setCategory,\r\n    saveNote, \r\n    notesArray,\r\n    deleteNote,\r\n    open\r\n    }) => {\r\n\r\n    return (\r\n        <div className={open ? \"sidebar openSidebar\" : \"sidebar\"}>\r\n            <NoteInput \r\n                handleTextChange={handleTextChange}\r\n                handleTitleChange={handleTitleChange}\r\n                noteText={noteText}\r\n                noteTitle={noteTitle}\r\n                titleState={titleState}\r\n                setTitleState={setTitleState}\r\n                setCategory={setCategory}\r\n                saveNote={saveNote}\r\n            />\r\n            <NoteHistory\r\n                notesArray={notesArray}\r\n                deleteNote={deleteNote}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideBar;","import React, { useState, useEffect } from 'react';\r\nimport { nanoid } from \"nanoid\";\r\nimport axios from \"axios\";  \r\nimport \"./App.css\";\r\nimport NoteList from './components/NoteList';\r\nimport SideBar from './components/SideBar';\r\n\r\n\r\nfunction App() {\r\n  const [noteText, setNoteText] = useState('');\r\n  const [noteTitle, setNoteTitle] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [filterCategory, setFilterCategory] = useState('');\r\n  const [searchText, setSearchText] = useState('');\r\n  const [open, setOpen] = useState(false);\r\n  const [complete, setComplete] = useState(false);\r\n  const [openEdit, setOpenEdit] = useState(false);\r\n  const [id, setId] = useState('');\r\n  const [notesArray, setNotesArray] = useState([])\r\n  const characterLimit = 200;\r\n\r\n  useEffect(() => {\r\n    axios \r\n        .get(\"http://localhost:8000/api/note\")\r\n        .then((res) => {\r\n          setNotesArray(res.data);\r\n        })\r\n        .catch((err) => console.log(err))\r\n  }, [])\r\n\r\nconst createNote = () => {\r\n  const date = new Date();\r\n  const newNote = {\r\n    id: nanoid(),\r\n    title: noteTitle,\r\n    text: noteText,\r\n    category: category,\r\n    completed: false,\r\n    date: date.toLocaleDateString()\r\n  }\r\n  const newNotes = [...notesArray, newNote]\r\n  setNotesArray(newNotes);\r\n}\r\n\r\n  const saveNote = async () => {\r\n    const date = new Date();\r\n\r\n    const newNote = {\r\n      id: nanoid(),\r\n      title: noteTitle,\r\n      text: noteText,\r\n      category: category,\r\n      completed: false,\r\n      date: date.toLocaleDateString()\r\n    }\r\n\r\n    if(noteText.trim().length > 0) {\r\n\r\n      axios \r\n          .post(\"http://localhost:8000/api/note\" , newNote)  \r\n          .then((res) => {\r\n              createNote(noteText);\r\n              setNotesArray([...notesArray, newNote])\r\n              setNoteText('');\r\n              setNoteTitle('');\r\n              setComplete(false);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err.message)\r\n            console.log(\"ERROR could not create note.\");\r\n          })\r\n  }\r\n}\r\n\r\nconst deleteNote = ( _id ) => {\r\n  axios.delete( `http://localhost:8000/api/note/${_id}`)\r\n  .catch((error) => console.log(error))\r\n  setNotesArray((notesArray) => {\r\n    return notesArray.filter((note) => note._id !== _id)\r\n  })\r\n  \r\n}\r\n\r\nconst completeNote = (index) => {\r\n  let notesArrayCopy = [...notesArray];\r\n\r\n  (notesArrayCopy[index].completed)\r\n  ?\r\n  (notesArrayCopy[index].completed = false)\r\n  :\r\n  (notesArrayCopy[index].completed = true)\r\n  setNotesArray(notesArrayCopy)\r\n}\r\n\r\nconst completeNoteStyle = (index) => {\r\n  if(notesArray[index].completed) {\r\n    return \"note note-complete\"\r\n  } else {\r\n    return \"note\"\r\n  }\r\n}\r\n\r\nconst editNote = (_id) => {\r\n  setId(_id);\r\n  setOpenEdit(true);\r\n  console.log(\"edit note function has been called...\");\r\n} \r\n  \r\nconst handleTitleChange = (event) => {\r\n  if(event.target.value.length >= 0) {\r\n    setNoteTitle(event.target.value);\r\n  }\r\n}\r\n\r\nconst handleTextChange = (event) => {\r\n  if(characterLimit - event.target.value.length >= 0) {\r\n    setNoteText(event.target.value)\r\n  }\r\n}\r\n\r\nconst handleCategorySort = (e) => {\r\n  setFilterCategory(e.target.value);\r\n}\r\n\r\n  return (\r\n    <div className=\"App\">\r\n        <SideBar \r\n          handleTextChange={handleTextChange}\r\n          handleTitleChange={handleTitleChange}\r\n          noteTitle={noteTitle}\r\n          noteText={noteText}\r\n          setCategory={setCategory}\r\n          saveNote={saveNote}\r\n          notesArray={notesArray}\r\n          deleteNote={deleteNote}\r\n          open={open}\r\n        />\r\n        <NoteList \r\n          notesArray={\r\n            filterCategory === \"\" ? notesArray.filter(note => note.text.toLowerCase().includes(searchText)) \r\n            :\r\n            notesArray.filter(note => note.text.toLowerCase().includes(searchText)) &&\r\n            notesArray.filter(note => note.category === filterCategory)\r\n          }\r\n          createNote={createNote}\r\n          saveNote={saveNote}\r\n          handleSearchNote={setSearchText}\r\n          handleCategorySort={handleCategorySort}\r\n          category={category}\r\n          open={open}\r\n          setOpen={setOpen}\r\n          deleteNote={deleteNote}\r\n          completeNote={completeNote}\r\n          completeNoteStyle={completeNoteStyle}\r\n          complete={complete}\r\n          setComplete={setComplete}\r\n          setNotesArray={setNotesArray}\r\n          editNote={editNote}\r\n          openEdit={openEdit}\r\n          setOpenEdit={setOpenEdit}\r\n          id={id}\r\n        />  \r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}